/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author JAKARIA
 */
public class Student extends javax.swing.JFrame {

    public Student() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize =  (int) tk.getScreenSize().getWidth();
        int ysize= (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);
        ShowList();
        
        
    }
    
    Connection con = Login.getConnection();
    public ArrayList<StudentList>getStudentList(){
        ArrayList<StudentList> list = new ArrayList<>();
        
        String query ="SELECT * FROM `student`,`guardian` where student.reg=guardian.reg order by class asc";
        Statement st;
        ResultSet rs;
        try{
            st =con.createStatement();

            rs = st.executeQuery(query);

            StudentList std;
            while(rs.next()){
                std = new StudentList(rs.getLong("reg"),rs.getString("student_name"),rs.getString("gender"),rs.getInt("class"),rs.getString("guardian_name"),rs.getLong("nid"));
                list.add(std);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
        return list;
    }
    int total;
    private void ShowList(){
        ArrayList<StudentList> list =getStudentList();
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        Object row[] = new Object[6];
        for(int i=0; i<list.size();i++){
            row[0]=list.get(i).getReg();
            row[1]=list.get(i).getName();
            row[2]=list.get(i).getGender();
            //row[3]=list.get(i).getDate();
            row[3]=list.get(i).getClas();
            row[4]=list.get(i).getGuardian();
            row[5]= list.get(i).getNID();
            model.addRow(row);
        }
        total = model.getRowCount();
        TS.setText("Total Students = "+total);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Fo`
     * rm Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        goback = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        view = new javax.swing.JButton();
        sbox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();
        TS = new javax.swing.JLabel();
        clsbox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 800));

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/image/ic_supervisor_account_black_48dp.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Student");

        goback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/image/icons8_Go_Back_40px_1.png"))); // NOI18N
        goback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gobackMouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Go Back");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(goback, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2)))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goback, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setBackground(new java.awt.Color(0, 204, 204));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/image/jk .png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(jLabel3)
                .addGap(0, 410, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        table.setBackground(new java.awt.Color(0, 153, 153));
        table.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        table.setForeground(new java.awt.Color(0, 0, 0));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Registration Number", "Name", "Gender", "Class", "Guardian Name", "Guardian's NID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(0, 204, 204));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        update.setBackground(new java.awt.Color(255, 204, 0));
        update.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        update.setForeground(new java.awt.Color(0, 153, 0));
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/image/icons8_Available_Updates_40px.png"))); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(51, 204, 0));
        delete.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 0, 0));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/image/icons8_Add_Trash_40px.png"))); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        view.setBackground(new java.awt.Color(255, 0, 0));
        view.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        view.setForeground(new java.awt.Color(255, 204, 0));
        view.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/image/icons8_View_40px_1.png"))); // NOI18N
        view.setText("View Details");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        sbox.setBackground(new java.awt.Color(255, 255, 102));
        sbox.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        sbox.setForeground(new java.awt.Color(0, 0, 0));
        sbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sboxKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Search Box");

        msg.setFont(new java.awt.Font("Cambria", 3, 36)); // NOI18N
        msg.setForeground(new java.awt.Color(255, 0, 0));

        TS.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        TS.setForeground(new java.awt.Color(153, 0, 0));

        clsbox.setBackground(new java.awt.Color(51, 51, 255));
        clsbox.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        clsbox.setForeground(new java.awt.Color(0, 0, 0));
        clsbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search by Class", "0", "1", "2", "3", "4", "5" }));
        clsbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                clsboxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(41, 41, 41)
                .addComponent(sbox, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(230, 230, 230))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(clsbox, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addComponent(update)
                        .addGap(231, 231, 231)
                        .addComponent(view)
                        .addGap(230, 230, 230)
                        .addComponent(delete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(752, 752, 752)
                        .addComponent(TS, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sbox, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(msg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(164, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update)
                            .addComponent(view)
                            .addComponent(delete)
                            .addComponent(clsbox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gobackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gobackMouseClicked
        // TODO add your handling code here:
        
        Menu mn = new Menu();
        mn.show();
        this.dispose();
    }//GEN-LAST:event_gobackMouseClicked
    
    public static  long id=-1;
    
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int i= table.getSelectedRow();
        TableModel model = table.getModel();
        id = (long) model.getValueAt(i, 0);
        //System.out.println(id);
    }//GEN-LAST:event_tableMouseClicked
    void watch(){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
            model.setRowCount(0);
            ShowList();
    }
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        if(id==-1){
            JOptionPane.showMessageDialog(null,"Nothing Selected !");
        }
        else{
            try {
            String Q ="DELETE FROM `student` WHERE `student`.`reg` = '"+id+"'";
            Statement st=con.createStatement();
            st.execute(Q);
            
            
            String q="DELETE FROM `permanent_adrs` WHERE `permanent_adrs`.`birth_reg` ='"+id+"'";
            Statement stm = con.createStatement();
            stm.execute(q);
            
            
            String Qu="DELETE FROM `present_adrs` WHERE `present_adrs`.`reg` = '"+id+"'";
            Statement ste = con.createStatement();
            ste.execute(Qu);
            
            
            String Que="DELETE FROM `guardian` WHERE `guardian`.`reg` = '"+id+"'";
            Statement s= con.createStatement();
            s.execute(Que);
            watch();
            JOptionPane.showMessageDialog(null,"Successfully Deleted !");
 
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"ERROR !");
            }
            id=-1;
        }
    }//GEN-LAST:event_deleteActionPerformed

    
    public static String name,reg,gender,bday,clas,year,gname,nid,mbl,vil,post,up,zil,permanentpost,permanentup,permanentvil,permanentzil;
    
    
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        if(id==-1){
            JOptionPane.showMessageDialog(null,"Nothing Selected !");
        }
        else{
            try{
                String query = "select reg, student_name, gender, birth_date, class, admission_year from student where reg = '"+id+"'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(query);
                if(!rs.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in STUDENT table!");
                }
                else{
                    reg=rs.getString("reg");
                    name=rs.getString("student_name");
                    gender=rs.getString("gender");
                    bday=rs.getString("birth_date");
                    clas=rs.getString("class");
                    year=rs.getString("admission_year");
                }
                String Q = "select nid, guardian_name, mobile_num from guardian where reg = '"+id+"'";
                Statement stm = con.createStatement();
                ResultSet res = stm.executeQuery(Q);
                if(!res.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in GUARDIAN table!");
                }
                else{
                   // JOptionPane.showMessageDialog(null,"Successfully!");
                   gname = res.getString("guardian_name");
                   nid = res.getString("nid");
                   mbl = res.getString("mobile_num");
                }
                String qu = "select village, post_code, upazila, district from present_adrs where reg = '"+id+"'";
                Statement s = con.createStatement();
                ResultSet r = s.executeQuery(qu);
                if(!r.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in PRESENT table!");
                }
                else{
                    //JOptionPane.showMessageDialog(null,"Successfully!");
                    vil = r.getString("village");
                    post=r.getString("post_code");
                    up=r.getString("upazila");
                    zil=r.getString("district");
                }
                String QUR= "select village, post_code, upazila, district from permanent_adrs where birth_reg = '"+id+"'";
                Statement stmt = con.createStatement();
                ResultSet rst= stmt.executeQuery(QUR);
                if(!rst.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in PERMANENT table!");
                }
                else{
                    //JOptionPane.showMessageDialog(null,"Successfully!");
                    permanentvil=rst.getString("village");
                    permanentpost=rst.getString("post_code");
                    permanentup=rst.getString("upazila");
                    permanentzil=rst.getString("district");
                }
                Update_student ups= new Update_student();
                ups.show();
                this.dispose();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,"ERROR!");
            }
            
        }
    }//GEN-LAST:event_updateActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        // TODO add your handling code here:
         if(id==-1){
            JOptionPane.showMessageDialog(null,"Nothing Selected !");
        }
        else{
            try{
                String query = "select reg, student_name, gender, birth_date, class, admission_year from student where reg = '"+id+"'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(query);
                if(!rs.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in STUDENT table!");
                }
                else{
                    reg=rs.getString("reg");
                    name=rs.getString("student_name");
                    gender=rs.getString("gender");
                    bday=rs.getString("birth_date");
                    clas=rs.getString("class");
                    year=rs.getString("admission_year");
                }
                String Q = "select nid, guardian_name, mobile_num from guardian where reg = '"+id+"'";
                Statement stm = con.createStatement();
                ResultSet res = stm.executeQuery(Q);
                if(!res.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in GUARDIAN table!");
                }
                else{
                   // JOptionPane.showMessageDialog(null,"Successfully!");
                   gname = res.getString("guardian_name");
                   nid = res.getString("nid");
                   mbl = res.getString("mobile_num");
                }
                String qu = "select village, post_code, upazila, district from present_adrs where reg = '"+id+"'";
                Statement s = con.createStatement();
                ResultSet r = s.executeQuery(qu);
                if(!r.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in PRESENT table!");
                }
                else{
                    //JOptionPane.showMessageDialog(null,"Successfully!");
                    vil = r.getString("village");
                    post=r.getString("post_code");
                    up=r.getString("upazila");
                    zil=r.getString("district");
                }
                String QUR= "select village, post_code, upazila, district from permanent_adrs where birth_reg = '"+id+"'";
                Statement stmt = con.createStatement();
                ResultSet rst= stmt.executeQuery(QUR);
                if(!rst.next()){
                    JOptionPane.showMessageDialog(null,"ERROR in PERMANENT table!");
                }
                else{
                    //JOptionPane.showMessageDialog(null,"Successfully!");
                    permanentvil=rst.getString("village");
                    permanentpost=rst.getString("post_code");
                    permanentup=rst.getString("upazila");
                    permanentzil=rst.getString("district");
                }
                View v= new View();
                v.show();
                this.setVisible(false);
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,"ERROR!");
            }
            
        }
    }//GEN-LAST:event_viewActionPerformed

    private void sboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sboxKeyReleased
        // TODO add your handling code here:
        PreparedStatement st;
        String search=sbox.getText();
        String query;
        clsbox.setSelectedItem("Search by Class");
        query ="select reg, student_name, gender, class,guardian_name,nid from student natural join guardian where student_name like '"+search+"%' or reg like '"+search+"%' "
                + "or gender like '"+search+"%' or guardian_name like '"+search+"%' or nid like '"+search+"%' order by class asc";
        ResultSet rs;
        try{ 
            st= con.prepareStatement(query);
            rs=st.executeQuery();
           table.setModel(DbUtils.resultSetToTableModel(rs));
           int row = table.getRowCount();
           if(row==0){
                msg.setText("Nothing Found");
            }
           else if(row==1){
                msg.setText("1 student found ");
            }
           else if(search.length()>0){
               msg.setText(row+" students found");
           }
           else{
               msg.setText("");
           }
        }catch(SQLException e){
             JOptionPane.showMessageDialog(null,"ERROR!");
        }
    }//GEN-LAST:event_sboxKeyReleased

    private void clsboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_clsboxItemStateChanged
        // TODO add your handling code here:
        String item= clsbox.getSelectedItem().toString();
        PreparedStatement st;
        ResultSet rs;
        String query="select reg, student_name, gender, birth_date, class from student where class = '"+item+"'";
        if(!item.equals("Search by Class")){
            try{
                st=con.prepareStatement(query);
                rs=st.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
                int row = table.getRowCount();
                if(row==0){
                    msg.setText("Nothing Found");
                }
                else if(row==1){
                    msg.setText("1 student found ");
                }
                else if(row>1){
                    msg.setText(row+" students found");
                }
                else{
                    msg.setText("");
                }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,"ERROR!");
            }
        }
        else{
            watch();
            msg.setText("");
        }
        
    }//GEN-LAST:event_clsboxItemStateChanged
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TS;
    private javax.swing.JComboBox<String> clsbox;
    private javax.swing.JButton delete;
    private javax.swing.JLabel goback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel msg;
    private javax.swing.JTextField sbox;
    private javax.swing.JTable table;
    private javax.swing.JButton update;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
